{"version":3,"sources":["assets/images/illustration.svg","assets/images/logo.svg","components/Button.tsx","services/firebase.ts","contexts/AuthContext.tsx","hooks/useAuth.ts","pages/NewRoom.tsx","assets/images/google-icon.svg","pages/Home.tsx","App.tsx","index.tsx"],"names":["Button","props","className","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","AuthContext","createContext","AuthContextProvider","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","signInWithGoogle","children","useAuth","useContext","NewRoom","newRoom","setNewRoom","event","preventDefault","trim","roomRef","ref","push","title","authorId","src","illustrationImg","alt","logoImg","onSubmit","type","placeholder","onChange","target","to","Home","history","useHistory","teste","window","location","pathname","console","log","onClick","googleIconImg","App","basename","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00bf92ca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/illustration.8aeb45a4.svg\";","export default __webpack_public_path__ + \"static/media/logo.3cce2a2f.svg\";","import { ButtonHTMLAttributes } from 'react';\r\n\r\nimport '../styles/button.scss';\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>\r\n\r\n\r\nexport function Button(props:ButtonProps) {\r\n\r\n  return (\r\n    <button  className=\"button\" {...props}/>  \r\n    );\r\n}\r\n","import firebase from 'firebase/app';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey:process.env.REACT_APP_API_KEY,\r\n    authDomain:process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL:process.env.REACT_APP_DATABASE_URL,\r\n    projectId:process.env.REACT_APP_PROJECT_ID, \r\n    storageBucket:process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId:process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId:process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\n\r\nexport {firebase, auth, database}","import { createContext,ReactNode, useState, useEffect } from 'react';\r\n\r\nimport { auth, firebase } from '../services/firebase';\r\n\r\ntype User = {\r\n    id: string;\r\n    name: string;\r\n    avatar: string;\r\n  };\r\n  \r\n  type AuthContextType = {\r\n    user: User | undefined;\r\n    signInWithGoogle: () => Promise<void>;\r\n  };\r\n\r\n  type AuthContextProviderType = {\r\n      children: ReactNode\r\n\r\n  }\r\n\r\nexport const AuthContext = createContext({} as AuthContextType);\r\n\r\nexport function AuthContextProvider(props:AuthContextProviderType){\r\n    \r\n  const [user, setUser] = useState<User>();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const { displayName, photoURL, uid } = user;\r\n        if (!displayName || !photoURL) {\r\n          throw new Error('Missing information from Google Account.');\r\n        }\r\n\r\n        setUser({\r\n          id: uid,\r\n          name: displayName,\r\n          avatar: photoURL,\r\n        });\r\n      }\r\n    });\r\n\r\n    return () =>{\r\n      unsubscribe();\r\n    }\r\n  }, []);\r\n\r\n  async function signInWithGoogle() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    const result = await auth.signInWithPopup(provider);\r\n    if (result.user) {\r\n      const { displayName, photoURL, uid } = result.user;\r\n      if (!displayName || !photoURL) {\r\n        throw new Error('Missing information from Google Account.');\r\n      }\r\n\r\n      setUser({\r\n        id: uid,\r\n        name: displayName,\r\n        avatar: photoURL,\r\n      });\r\n    }\r\n  }\r\n\r\n    return(\r\n        <AuthContext.Provider value={{ user, signInWithGoogle }}>\r\n            {props.children}\r\n      </AuthContext.Provider>\r\n\r\n    )\r\n}\r\n","import {useContext} from 'react';\r\nimport {AuthContext} from '../contexts/AuthContext'\r\n\r\nexport function useAuth(){\r\n    const value = useContext(AuthContext)\r\n\r\n    return value;\r\n}","import { Link } from 'react-router-dom';\r\n\r\nimport illustrationImg from '../assets/images/illustration.svg';\r\nimport logoImg from '../assets/images/logo.svg';\r\n\r\nimport '../styles/auth.scss';\r\n\r\nimport { Button } from '../components/Button';\r\nimport { FormEvent, useState } from 'react';\r\n\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { database } from '../services/firebase';\r\n\r\nexport function NewRoom() {\r\n  const {user} = useAuth();\r\n\r\n  const [newRoom, setNewRoom] = useState('');\r\n\r\n  async function handleCreateRoom(event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    if (newRoom.trim()===''){\r\n      return;\r\n    }\r\n\r\n    const roomRef = database.ref('rooms');\r\n\r\n    const firebaseRoom = await roomRef.push({\r\n      title: newRoom,\r\n      authorId: user?.id,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div id='page-auth'>\r\n      <aside>\r\n        <img\r\n          src={illustrationImg}\r\n          alt='Ilustração simbolizando perguntas e respostas'\r\n        ></img>\r\n        <strong>Crie salas de Q&amp;A ao-vivo</strong>\r\n        <p>Tire as dúvidas da sua audiência em tempo-real</p>\r\n      </aside>\r\n      <main>\r\n        <div className='main-content'>\r\n          <img src={logoImg} alt='Letmeask' />\r\n          <h2>Criar uma nova sala</h2>\r\n          <form onSubmit={handleCreateRoom}>\r\n            <input type='text' placeholder='Nome da sala' \r\n            onChange={event => setNewRoom(event.target.value)}\r\n            value={newRoom}\r\n            />\r\n            <Button type='submit'>Criar sala</Button>\r\n          </form>\r\n          <p>\r\n            Quer entrar em uma sala existente? <Link to='/'>clique aqui</Link>\r\n          </p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/google-icon.0dd78068.svg\";","import { useHistory } from 'react-router-dom';\r\n\r\nimport illustrationImg from '../assets/images/illustration.svg';\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport googleIconImg from '../assets/images/google-icon.svg';\r\n\r\nimport { Button } from '../components/Button';\r\n\r\nimport '../styles/auth.scss';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\n\r\n\r\nexport function Home() {\r\n  const history = useHistory();\r\n  const {user, signInWithGoogle} = useAuth()\r\n\r\n  async function handleCreateRoom() {\r\n    var teste = window.location.pathname\r\n    console.log(teste)\r\n    if(!user){\r\n      await signInWithGoogle()\r\n    }\r\n    history.push('/rooms/new');\r\n\r\n  }\r\n\r\n  return (\r\n    <div id='page-auth'>\r\n      <aside>\r\n        <img\r\n          src={illustrationImg}\r\n          alt='Ilustração simbolizando perguntas e respostas'\r\n        ></img>\r\n        <strong>Crie salas de Q&amp;A ao-vivo</strong>\r\n        <p>Tire as dúvidas da sua audiência em tempo-real</p>\r\n      </aside>\r\n      <main>\r\n        <div className='main-content'>\r\n          <img src={logoImg} alt='Letmeask' />\r\n          <button onClick={handleCreateRoom} className='create-room'>\r\n            <img src={googleIconImg} alt='Logo do Google' />\r\n            Crie sua sala com o Google\r\n          </button>\r\n          <div className='separator'>ou entre em uma sala</div>\r\n          <form>\r\n            <input type='text' placeholder='Digite o código da sala' />\r\n            <Button type='submit'>Entrar na sala</Button>\r\n          </form>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport { NewRoom } from './pages/NewRoom';\r\nimport { Home } from './pages/Home';\r\n\r\nimport { AuthContextProvider } from './contexts/AuthContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthContextProvider>\r\n      <BrowserRouter basename={window.location.pathname || ''}>\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/rooms/new' component={NewRoom} />\r\n      </BrowserRouter>\r\n    </AuthContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './styles/global.scss'\r\n\r\nimport'./services/firebase';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}